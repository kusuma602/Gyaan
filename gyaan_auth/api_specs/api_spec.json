{
    "swagger": "2.0",
    "host": "localhost:8080",
    "basePath": "/gyaan_auth/",
    "info": {
        "version": "1.0.0",
        "title": "Gyaan_auth",
        "description": "Authorizartion APIs"

    },
    "schemes": [
        "http",
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "securityDefinitions": {
        "oauth": {
            "tokenUrl": "http://auth.ibtspl.com/oauth2/",
            "flow": "password",
            "scopes": {
                "read": "read users",
                "write": "write users",
                "update": "update users",
                "delete": "delete users",
                "superuser": "super user permission"
            },
            "type": "oauth2"
        }
    },
    "definitions": {
        "LoginCredentails":{
          "type":"object",
          "properties":{
            "username":{
              "type":"string",
              "example":"username"
            },
            "password":{
              "type":"string",
              "example":"password"
            }

          },
          "required":[
            "username",
            "password"
          ]
        },
        "LoginResponse":{
          "type":"object",
          "properties":{
            "access_token":{
              "type":"string",
              "example":"access_token"
            },
            "is_admin":{
              "type":"boolean"
            },
            "is_domain_expert":{
              "type":"boolean"
            }

          },
          "required":[
            "access_token",
            "is_admin",
            "is_domain_expert"
          ]
        },
        "User":{
          "type":"object",
          "properties":{
            "user_id":{
              "type":"integer"
            },
            "name":{
              "type":"string"
            }
          },
          "required":[
            "user_id",
            "name"
          ]
        },
        "Comment":{
          "type":"object",
          "properties":{
            "comment_id":{
              "type":"integer"
            },
            "comment_content":{
              "type":"string"
            },
            "commented_at":{
              "type":"string",
              "format":"date-time"
            },
            "reactions_count":{
              "type":"integer"
            },
            "commented_by":{
              "$ref":"#/definitions/User"
            }
          },
          "required":[
            "comment_id",
            "comment_content",
            "commented_at",
            "reactions_count",
            "commented_by"
          ]
        },
        "Answer":{
          "type":"object",
          "properties":{
            "comment_id":{
              "type":"integer"
            },
            "comment_content":{
              "type":"string"
            },
            "commented_at":{
              "type":"string",
              "format":"date-time"
            },
            "reactions_count":{
              "type":"integer"
            },
            "commented_by":{
              "$ref":"#/definitions/User"
            },
            "approved_by":{
              "$ref":"#/definitions/User"

            }
          },
          "required":[
            "comment_id",
            "comment_content",
            "commented_at",
            "reactions_count",
            "commented_by",
            "approved_by"
          ]
        },
        "Tag":{
          "type":"object",
          "properties":{
            "tag_id":{
              "type":"integer"
            },
            "tag_name":{
              "type":"string"
            }
          },
          "required":[
            "tag_id",
            "tag_name"
          ]
        },
        "Post":{
          "type":"object",
          "properties":{
            "post_id":{
              "type": "integer"
            },
            "tittle":{
              "type":"string"
            },
            "description":{
              "type":"string"
            },
            "posted_at":{
              "type":"string",
              "format":"date-time"
            },
            "posted_by":{
            "$ref":"#/definitions/User"
            },
            "comments_count":{
              "type": "integer"
            },
            "reactions_count":{
              "type": "integer"
            },
            "reacted_by":{
              "type":"array",
              "items":{
                "$ref": "#/definitions/User"
              }
            },
            "domain_id":{
              "type": "integer"
            },
            "domain_name":{
              "type":"string"
            },
            "tags": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Tag"
              }
            },
            "comments":{
              "type":"array",
              "items":{
                "$ref": "#/definitions/Comment"
              }
            },
            "answer":{
              "$ref":"#/definitions/Answer"
            }
          },
          "required":[
            "post_id",
            "tittle",
            "posted_by",
            "posted_at",
            "comments_count",
            "reactions_count",
            "reacted_by",
            "domain_id",
            "domain_name",
            "tags",
            "comments"
          ]

        }
    },
    "parameters": {
        "LoginParameters": {
                  "description": "Success response",
                  "in": "body",
                  "name": "user_credentails",
                  "schema":{
                    "$ref":"#/definitions/LoginCredentails"
                  }
              },
        "DomainPostsOffsetParameter":{
          "name":"offset",
          "in" :"query",
          "description": "Offset Value",
          "required": True,
          "type": "integer"

        },
        "DomainPostsLimitParameter":{
          "name":"limit",
          "in" :"query",
          "description": "Limit Value",
          "required": True,
          "type": "integer"

        }
    },
    "responses":{
      "LoginResponse":{
        "description":"user loggin",
        "schema":{
          "$ref":"#/definitions/LoginResponse"
        }
      },
      "LoginFailureReponseNotFoundResponse":{
        "description":"Not Found Failure Reponse",
        "schema": {
                "type": "object",
                "properties": {
                    "response": {
                        "type": "string"
                    },
                    "http_status_code": {
                        "type": "integer",
                        "example": 404
                    },
                    "res_status": {
                        "type": "string",
                        "enum": [
                            "INVALID_USERNAME"
                        ]
                    }
                },
                "required": [
                    "response",
                    "http_status_code",
                    "res_status"
                ]
            }
      },
      "LoginFailureReponseBadRequestResponse":{
        "description":"Bad Request Failure Reponse",
        "schema": {
                "type": "object",
                "properties": {
                    "response": {
                        "type": "string"
                    },
                    "http_status_code": {
                        "type": "integer",
                        "example": 400
                    },
                    "res_status": {
                        "type": "string",
                        "enum": [
                            "INVALID_PASSWORD"
                        ]
                    }
                },
                "required": [
                    "response",
                    "http_status_code",
                    "res_status"
                ]
            }
      },
      "GetDomaindetailsResponseOffsetBadRequest":{
        "description":"Bad Request Failure Reponse",
        "schema": {
                "type": "object",
                "properties": {
                    "response": {
                        "type": "string"
                    },
                    "http_status_code": {
                        "type": "integer",
                        "example": 400
                    },
                    "res_status": {
                        "type": "string",
                        "enum": [
                            "INVALID_OFFSET",
                            "INVALID_ENUM"
                        ]
                    }
                },
                "required": [
                    "response",
                    "http_status_code",
                    "res_status"
                ]
            }
      },
      "GetDomainDetailsResponse":{
        "description":"Success Response",
        "schema":{
          "type":"object",
          "properties":{
            "domain_details":{
              "type":"object",
                "properties":{
                  "domain_name":{
                    "type":"string"
                  },
                  "description":{
                    "type":"string"
                  },
                  "domain_members_count":{
                    "type":"integer"
                  },
                  "domain_posts_count":{
                    "type":"integer"
                  },
                  "domain_experts":{
                    "type":"array",
                    "items":{
                      "$ref":"#/definitions/User"
                    }
                  }
                },
                "required":[
                  "domain_name",
                  "description",
                  "domain_members_count",
                  "domain_posts_count",
                  "domain_experts"
                ]

                  }

                },
          "required":[
            "domain_details"
          ]
        }
      },
      "DomainDetailsResponseNotFoundResponse":{
        "description":"Not Found Failure Reponse",
        "schema": {
                "type": "object",
                "properties": {
                    "response": {
                        "type": "string"
                    },
                    "http_status_code": {
                        "type": "integer",
                        "example": 404
                    },
                    "res_status": {
                        "type": "string",
                        "enum": [
                            "INVALID_DOMAIN_ID"
                        ]
                    }
                },
                "required": [
                    "response",
                    "http_status_code",
                    "res_status"
                ]
            }
      },
      "GetDomainPostsResponse":{
        "description": "Success Response",
        "schema":{
          "type":"array",
          "items":{
            "$ref":"#/definitions/Post"
          }
        }
      }
    },
    "paths": {
        "/user/login/v1/": {
            "post": {
                "operationId": "signin_user",
                "summary": "validate user details and login valid user",
                "description": "validate details and login the user",
                "parameters": [{
                    "$ref": "#/parameters/LoginParameters"
                }],
                "responses": {
                    "200": {
                        "$ref": "#/responses/LoginResponse"
                    },
                    "404": {
                        "$ref":"#/responses/LoginFailureReponseNotFoundResponse"
                    },
                    "400":{
                      "$ref":"#/responses/LoginFailureReponseBadRequestResponse"
                    }
                }
            }
        },
      "/domain/{domain_id}/v1/":{
        "get":{
          "operationId": "get_domain_details",
          "summary": " Get domain details",
          "description":" Get details of Particular Domain",
          "parameters": [
              {
                  "name": "domain_id",
                  "in": "path",
                  "required": true,
                  "type": "integer"
              }
          ],
          "responses":{
            "200":{
              "$ref": "#/responses/GetDomainDetailsResponse"
            },
            "404":{
              "$ref":"#/responses/DomainDetailsResponseNotFoundResponse"
            }
          }
        }
      },
      "/domain/{domain_id}/posts/v1/":{
        "get":{
          "operationId": "get_domain_posts",
          "summary": "Get Domain Posts",
          "description": "Get details of particular domain",
          "parameters":[
            {
                  "name": "domain_id",
                  "in": "path",
                  "required": true,
                  "type": "integer"
            },
            {
                "$ref": "#/parameters/DomainPostsLimitParameter"
              },
              {
                "$ref": "#/parameters/DomainPostsOffsetParameter"
              }
          ],
          "responses":{
            "200":{
              "$ref": "#/responses/GetDomainPostsResponse"
            },
            "404":{
              "$ref":"#/responses/DomainDetailsResponseNotFoundResponse"
            },
            "400":{
              "$ref": "#/responses/GetDomaindetailsResponseOffsetBadRequest"
            }
          }
      }
    }
    }
}
